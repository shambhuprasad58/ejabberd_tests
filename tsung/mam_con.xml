<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/home/aleksandra.lipiec/tsung_dist/share/tsung/tsung-1.0.dtd">
<tsung loglevel="error" version="1.0" dumptraffic="false">

  <clients>
      <client host="t-srv-tsung2" maxusers="100000">
          <ip value="192.168.71.10"></ip>
          <ip value="192.168.71.11"></ip>
          <ip value="192.168.71.12"></ip>
          <ip value="192.168.71.13"></ip>
      </client>
  </clients>

  <servers>
      <server host="192.168.79.10" port="5222" type="tcp"/>
      <server host="192.168.79.11" port="5222" type="tcp"/>
      <server host="192.168.79.12" port="5222" type="tcp"/>
      <server host="192.168.79.13" port="5222" type="tcp"/>
  </servers>

  <load>
    <arrivalphase phase="1" duration="5" unit="minute">
      <users maxnumber="100000" interarrival="0.001" unit="second"></users>
    </arrivalphase>
  </load>

  <options>
    <option type="ts_jabber" name="global_number" value="100"></option>
    <option type="ts_jabber" name="userid_max" value="100100"></option>
    <option type="ts_jabber" name="domain" value="localhost"></option>
    <option type="ts_jabber" name="username" value="user"></option>
    <option type="ts_jabber" name="passwd" value="pass"></option>
  </options>

  <deffun name="var" sourcetype="eval">
    <code>
      <![CDATA[
        fun({_Session, DynVars}, Name) ->
            {ok, Value} = ts_dynvars:lookup(Name, DynVars),
            Value
        end.
      ]]>
    </code>
  </deffun>

  <deffun name="now_to_microseconds" sourcetype="eval">
    <code>
      <![CDATA[
        fun({Mega, Secs, Micro}) ->
            (1000000 * Mega + Secs) * 1000000 + Micro
        end.
      ]]>
    </code>
  </deffun>

  <deffun name="rand_mess_id" sourcetype="eval">
    <code>
      <!-- Returns a random message id of 24 hours age -->
      <![CDATA[
        fun() ->
            Now = now_to_microseconds(now()),
            Microseconds = Now - random:uniform(86400000000),
            NodeId = random:uniform(255),
            MessId = (Microseconds bsl 8) + NodeId,
            list_to_binary(integer_to_list(MessId, 36))
        end.
      ]]>
    </code>
  </deffun>


  <deffun name="rand_jid" sourcetype="eval">
    <code>
      <![CDATA[
        fun(Param) ->
            JIDs = var(Param, random_jids),
            lists:nth(random:uniform(length(JIDs)), JIDs)
        end.
      ]]>
    </code>
  </deffun>

  <sessions>
    <session name="mam" probability="100" type="ts_jabber">

      <request subst="true">
        <jabber type="connect" ack="no_ack" />
      </request>

      <thinktime value="1" />

      <transaction name="auth">
        <request><jabber type="auth_sasl" ack="local" /></request>
        <request><jabber type="connect" ack="local" /></request>
        <request><jabber type="auth_sasl_bind" ack="local" /></request>
        <request><jabber type="auth_sasl_session" ack="local" /></request>
      </transaction>

      <thinktime value="1" />

      <request subst="true">
        <jabber type="presence:initial" ack="no_ack"/>
      </request>

      <thinktime value="5" />

      <setdynvars sourcetype="eval">
        <code>
          <![CDATA[
            fun(Param) ->
              [[ts_jabber:random_jid(Param) || _ <- lists:seq(1, 5)]]
            end.
          ]]>
        </code>
        <var name="random_jids" />
      </setdynvars>

      <thinktime value="15" />

      <for from="1" to="100000" incr="1" var="i"> 

        <setdynvars sourcetype="random_number" start="1" end="100">
          <var name="event"/>
        </setdynvars>
  
        <if var="event" lt="90">
          <setdynvars sourcetype="eval" code="fun(Param) -> [rand_jid(Param)] end.">
            <var name="to_jid" />
          </setdynvars>
          <request subst="true">
             <jabber type="chat" ack="no_ack" size="50"
               destination="jid" destination_jid="%%_to_jid%%"/>
          </request>
        </if>
  
        <if var="event" gt="90">
          <!-- Querying for all messages to/from a particular JID -->
          <setdynvars sourcetype="eval" code="fun(Param) -> [rand_jid(Param)] end.">
            <var name="with_jid" />
          </setdynvars>
  
          <setdynvars sourcetype="eval" code="fun(Param) -> [rand_mess_id()] end.">
            <var name="after_mess_id" />
          </setdynvars>
  
          <request subst="true" tag="query_with">
            <jabber type="raw" ack="no_ack">
              <data normalize_xml="true">
                <![CDATA[
                  <iq type='get'>
                    <query xmlns='urn:xmpp:mam:tmp' after_id="%%_after_mess_id%%">
                       <opt_count/>
                       <with>%%_with_jid%%</with>
                       <set xmlns='http://jabber.org/protocol/rsm'>
                         <max>10</max>
                         <before/>
                       </set>
                    </query>
                  </iq>
                ]]>
              </data>
            </jabber>
          </request>
        </if>

        <thinktime value="60"/>
     </for> 

     <request> <jabber type="close" ack="local"/> </request>
 
    </session>

  </sessions>
</tsung>
